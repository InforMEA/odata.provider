package org.informea.odata.producer.toolkit.impl;

// Generated Mar 29, 2012 4:48:04 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.informea.odata.pojo.AbstractPebldsProject;
import org.odata4j.core.OEntities;
import org.odata4j.core.OEntity;
import org.odata4j.core.OEntityKey;
import org.odata4j.core.OLink;
import org.odata4j.core.OProperties;
import org.odata4j.core.OProperty;
import org.odata4j.edm.EdmEntitySet;

/**
 * PebldsProject generated by hbm2java
 */
@Entity
@Table(name = "peblds_project", uniqueConstraints = @UniqueConstraint(columnNames = "title"))
public class PebldsProject extends AbstractPebldsProject implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    private Integer id;
    @Column(name = "title", unique = true, nullable = false, length = 64)
    @NotNull
    @Length(max = 64)
	private String title;
    @Column(name = "budget", precision = 16)
	private Double budget;
    @Column(name = "objective", length = 512)
    @Length(max = 512)
	private String objective;
    @Column(name = "description", nullable = false, length = 65535)
    @NotNull
    @Length(max = 65535)
	private String description;
    @Column(name = "contact", length = 64)
    @Length(max = 64)
	private String contact;
    @Column(name = "contact_details")
	private String contactDetails;
    @Column(name = "outcome", length = 512)
    @Length(max = 512)
	private String outcome;
    @Temporal(TemporalType.DATE)
    @Column(name = "start_date", length = 10)
	private Date startDate;
    @Temporal(TemporalType.DATE)
    @Column(name = "end_date", length = 10)
	private Date endDate;
    @Column(name = "funding_agency", length = 64)
    @Length(max = 64)
	private String fundingAgency;
    @Column(name = "rec_author", nullable = false, length = 32)
    @NotNull
    @Length(max = 32)
	private String recAuthor;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "rec_created", nullable = false, length = 19)
    @NotNull
	private Date recDate;
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "peblds_project_treaty", joinColumns = { @JoinColumn(name = "id_project", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "id_treaty", nullable = false, updatable = false) })
	private Set<PebldsTreaty> pebldsTreaties = new HashSet<PebldsTreaty>(0);
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "peblds_project_country", joinColumns = { @JoinColumn(name = "id_project", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "id_country", nullable = false, updatable = false) })
	private Set<PebldsCountry> pebldsCountries = new HashSet<PebldsCountry>(0);
    @JoinTable(name = "peblds_project_wpfb_files", joinColumns = {
            @JoinColumn(name = "id_project", nullable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "id_wpfb_files", nullable = false)})
    @ManyToMany(fetch = FetchType.LAZY)
    private Set<PebldsWpfbFiles> pebldsWpfbFiles;

	public PebldsProject() {
	}

	public PebldsProject(String title, String description, String recAuthor,
			Date recDate) {
		this.title = title;
		this.description = description;
		this.recAuthor = recAuthor;
		this.recDate = recDate;
	}

	public PebldsProject(String title, Double budget, String objective,
			String description, String contact, String contactDetails,
			String outcome, Date startDate, Date endDate, String fundingAgency,
			String recAuthor, Date recDate,
			Set<PebldsTreaty> pebldsTreaties, Set<PebldsCountry> pebldsCountries) {
		this.title = title;
		this.budget = budget;
		this.objective = objective;
		this.description = description;
		this.contact = contact;
		this.contactDetails = contactDetails;
		this.outcome = outcome;
		this.startDate = startDate;
		this.endDate = endDate;
		this.fundingAgency = fundingAgency;
		this.recAuthor = recAuthor;
		this.recDate = recDate;
		this.pebldsTreaties = pebldsTreaties;
		this.pebldsCountries = pebldsCountries;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public Double getBudget() {
		return this.budget;
	}

	public void setBudget(Double budget) {
		this.budget = budget;
	}

	public String getObjective() {
		return this.objective;
	}

	public void setObjective(String objective) {
		this.objective = objective;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getContact() {
		return this.contact;
	}

	public void setContact(String contact) {
		this.contact = contact;
	}

	public String getContactDetails() {
		return this.contactDetails;
	}

	public void setContactDetails(String contactDetails) {
		this.contactDetails = contactDetails;
	}

	public String getOutcome() {
		return this.outcome;
	}

	public void setOutcome(String outcome) {
		this.outcome = outcome;
	}

	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public String getFundingAgency() {
		return this.fundingAgency;
	}

	public void setFundingAgency(String fundingAgency) {
		this.fundingAgency = fundingAgency;
	}

	public String getRecAuthor() {
		return this.recAuthor;
	}

	public void setRecAuthor(String recAuthor) {
		this.recAuthor = recAuthor;
	}

	public Date getRecDate() {
		return this.recDate;
	}

	public void setRecDate(Date recDate) {
		this.recDate = recDate;
	}

	public Set<PebldsTreaty> getPebldsTreaties() {
		return this.pebldsTreaties;
	}

	public void setPebldsTreaties(Set<PebldsTreaty> pebldsTreaties) {
		this.pebldsTreaties = pebldsTreaties;
	}

	public Set<PebldsCountry> getPebldsCountries() {
		return this.pebldsCountries;
	}

	public void setPebldsCountries(Set<PebldsCountry> pebldsCountries) {
		this.pebldsCountries = pebldsCountries;
	}

    public Set<PebldsWpfbFiles> getPebldsWpfbFiles()
    {
        return pebldsWpfbFiles;
    }

    public void setPebldsWpfbFiles(Set<PebldsWpfbFiles> pebldsWpfbFiles)
    {
        this.pebldsWpfbFiles = pebldsWpfbFiles;
    }


    // OData specific definitions
    /**
     * Transforms each object's field into OProperty and object into OEntity.
     * Used by OData4J framework to serialize output.
     * @param ees Entity set that describes this object. This was defined in metadata for this object,
     * see {@link org.informea.odata.pojo.AbstractPebldsProject#getSchema(String)}.
     * @return This object encoded as OEntity
     */
    @Override
    public OEntity asEntity(EdmEntitySet ees) {
        final List<OProperty<?>> properties = new ArrayList<OProperty<?>>();
        properties.add(OProperties.int32("id", getId()));
        properties.add(OProperties.string("title", getTitle()));
        properties.add(OProperties.string("objective", getObjective()));
        properties.add(OProperties.string("description", getDescription()));
        properties.add(OProperties.string("contact", getContact()));
        properties.add(OProperties.string("outcome", getOutcome()));
        properties.add(OProperties.string("contactDetails", getContactDetails()));
        properties.add(OProperties.string("fundingAgency", getFundingAgency()));
        properties.add(OProperties.double_("budget", getBudget()));
        properties.add(OProperties.datetime("startDate", getStartDate()));
        properties.add(OProperties.datetime("endDate", getEndDate()));
        return OEntities.create(ees, OEntityKey.create(getId()), properties, new ArrayList<OLink>(), null, null);

    }

}
