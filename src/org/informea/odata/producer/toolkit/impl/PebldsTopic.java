package org.informea.odata.producer.toolkit.impl;

// Generated Mar 29, 2012 4:48:04 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.informea.odata.pojo.AbstractPebldsTopic;
import org.odata4j.core.OEntities;
import org.odata4j.core.OEntity;
import org.odata4j.core.OEntityKey;
import org.odata4j.core.OLink;
import org.odata4j.core.OProperties;
import org.odata4j.core.OProperty;
import org.odata4j.edm.EdmEntitySet;

/**
 * PebldsTopic generated by hbm2java
 */
@Entity
@Table(name = "peblds_topic")
public class PebldsTopic extends AbstractPebldsTopic implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
	private Integer id;
    @Column(name = "name", nullable = false, length = 64)
    @NotNull
    @Length(max = 64)
	private String name;
    @Column(name = "rec_author", nullable = false, length = 32)
    @NotNull
    @Length(max = 32)
	private String recAuthor;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "rec_created", nullable = false, length = 19)
    @NotNull
	private Date recDate;
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "peblds_technical_report_topic", joinColumns = { @JoinColumn(name = "id_topic", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "id_technical_report", nullable = false, updatable = false) })
	private Set<PebldsTechnicalReport> pebldsTechnicalReports = new HashSet<PebldsTechnicalReport>(0);
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "pebldsTopic")
	private Set<PebldsBestPractice> pebldsBestPractices = new HashSet<PebldsBestPractice>(0);

	public PebldsTopic() {
	}

	public PebldsTopic(String name, String recAuthor, Date recDate) {
		this.name = name;
		this.recAuthor = recAuthor;
		this.recDate = recDate;
	}

	public PebldsTopic(String name, String recAuthor, Date recDate,
			Set<PebldsTechnicalReport> pebldsTechnicalReports,
			Set<PebldsBestPractice> pebldsBestPractices) {
		this.name = name;
		this.recAuthor = recAuthor;
		this.recDate = recDate;
		this.pebldsTechnicalReports = pebldsTechnicalReports;
		this.pebldsBestPractices = pebldsBestPractices;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getRecAuthor() {
		return this.recAuthor;
	}

	public void setRecAuthor(String recAuthor) {
		this.recAuthor = recAuthor;
	}

	public Date getRecDate() {
		return this.recDate;
	}

	public void setRecDate(Date recDate) {
		this.recDate = recDate;
	}

	public Set<PebldsTechnicalReport> getPebldsTechnicalReports() {
		return this.pebldsTechnicalReports;
	}

	public void setPebldsTechnicalReports(
			Set<PebldsTechnicalReport> pebldsTechnicalReports) {
		this.pebldsTechnicalReports = pebldsTechnicalReports;
	}

	public Set<PebldsBestPractice> getPebldsBestPractices() {
		return this.pebldsBestPractices;
	}

	public void setPebldsBestPractices(
			Set<PebldsBestPractice> pebldsBestPractices) {
		this.pebldsBestPractices = pebldsBestPractices;
	}

	@Override
    public OEntity asEntity(EdmEntitySet ees){
        final List<OProperty<?>> properties = new ArrayList<OProperty<?>>();
        properties.add(OProperties.int32("id", getId()));
        properties.add(OProperties.string("name", getName()));
        return OEntities.create(ees, OEntityKey.create(getId()), properties, new ArrayList<OLink>(), null, null);
    }

}
