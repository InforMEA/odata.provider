package org.informea.odata.producer.toolkit.impl;

// Generated Mar 29, 2012 4:48:04 PM by Hibernate Tools 3.4.0.CR1

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.activation.MimetypesFileTypeMap;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.informea.odata.pojo.AbstractPebldsWpfbFile;
import org.informea.odata.producer.toolkit.Configuration;
import org.odata4j.core.OEntities;
import org.odata4j.core.OEntity;
import org.odata4j.core.OEntityKey;
import org.odata4j.core.OLink;
import org.odata4j.core.OProperties;
import org.odata4j.core.OProperty;
import org.odata4j.edm.EdmEntitySet;

/**
 * PebldsWpfbFiles generated by hbm2java
 */
@Entity
@Table(name = "peblds_wpfb_files", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "file_name", "file_category" }),
		@UniqueConstraint(columnNames = "file_path") })
public class PebldsWpfbFiles extends AbstractPebldsWpfbFile implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "file_id", unique = true, nullable = false)
	private Integer fileId;
    @Column(name = "file_name", nullable = false, length = 127)
    @NotNull
    @Length(max = 127)
	private String fileName;
    @Column(name = "file_path", unique = true, nullable = false)
    @NotNull
	private String filePath;
    @Column(name = "file_size", nullable = false)
	private long fileSize;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "file_date", nullable = false, length = 19)
    @NotNull
	private Date fileDate;
    @Column(name = "file_hash", nullable = false, length = 32)
    @NotNull
    @Length(max = 32)
	private String fileHash;
    @Column(name = "file_remote_uri", nullable = false)
    @NotNull
	private String fileRemoteUri;
    @Column(name = "file_thumbnail")
	private String fileThumbnail;
    @Column(name = "file_display_name", nullable = false)
    @NotNull
	private String fileDisplayName;
    @Column(name = "file_description", length = 65535)
    @Length(max = 65535)
	private String fileDescription;
    @Column(name = "file_tags", nullable = false)
    @NotNull
	private String fileTags;
    @Column(name = "file_requirement")
	private String fileRequirement;
    @Column(name = "file_version", length = 64)
    @Length(max = 64)
	private String fileVersion;
    @Column(name = "file_author")
	private String fileAuthor;
    @Column(name = "file_language")
	private String fileLanguage;
    @Column(name = "file_platform")
	private String filePlatform;
    @Column(name = "file_license", nullable = false)
    @NotNull
	private String fileLicense;
    @Column(name = "file_user_roles", nullable = false)
    @NotNull
	private String fileUserRoles;
    @Column(name = "file_offline", nullable = false, length = 2)
    @NotNull
    @Length(max = 2)
	private String fileOffline;
    @Column(name = "file_direct_linking", nullable = false, length = 2)
    @NotNull
    @Length(max = 2)
	private String fileDirectLinking;
    @Column(name = "file_force_download", nullable = false, length = 2)
    @NotNull
    @Length(max = 2)
	private String fileForceDownload;
    @Column(name = "file_category", nullable = false)
	private int fileCategory;
    @Column(name = "file_category_name", nullable = false, length = 127)
    @NotNull
    @Length(max = 127)
	private String fileCategoryName;
    @Column(name = "file_update_of")
	private Long fileUpdateOf;
    @Column(name = "file_post_id")
	private Long filePostId;
    @Column(name = "file_attach_order", nullable = false)
	private int fileAttachOrder;
    @Column(name = "file_wpattach_id", nullable = false)
	private long fileWpattachId;
    @Column(name = "file_added_by")
	private Long fileAddedBy;
    @Column(name = "file_hits", nullable = false)
	private long fileHits;
    @Column(name = "file_ratings", nullable = false)
	private long fileRatings;
    @Column(name = "file_rating_sum", nullable = false)
	private long fileRatingSum;
    @Column(name = "file_last_dl_ip", nullable = false, length = 100)
    @NotNull
    @Length(max = 100)
	private String fileLastDlIp;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "file_last_dl_time", nullable = false, length = 19)
    @NotNull
	private Date fileLastDlTime;
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "peblds_best_practice_wpfb_files",
            joinColumns = { @JoinColumn(name = "id_wpfb_files", nullable = false, updatable = false) },
            inverseJoinColumns = { @JoinColumn(name = "id_best_practice", nullable = false, updatable = false) })
    private Set<PebldsBestPractice> bestPracticeSet;
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "peblds_project_wpfb_files",
            joinColumns = { @JoinColumn(name = "id_wpfb_files", nullable = false, updatable = false) },
            inverseJoinColumns = { @JoinColumn(name = "id_project", nullable = false, updatable = false) })
    private Set<PebldsProject> pebldsProjects;
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "peblds_technical_report_wpfb_files",
            joinColumns = { @JoinColumn(name = "id_wpfb_files", nullable = false, updatable = false) },
            inverseJoinColumns = { @JoinColumn(name = "id_technical_report", nullable = false, updatable = false) })
    private Set<PebldsTechnicalReport> pebldsTechnicalReports;

    @Transient
    private String mineType;

	public PebldsWpfbFiles() {
	}

	public PebldsWpfbFiles(String fileName, String filePath, long fileSize,
			Date fileDate, String fileHash, String fileRemoteUri,
			String fileDisplayName, String fileTags, String fileLicense,
			String fileUserRoles, String fileOffline, String fileDirectLinking,
			String fileForceDownload, int fileCategory,
			String fileCategoryName, int fileAttachOrder, long fileWpattachId,
			long fileHits, long fileRatings, long fileRatingSum,
			String fileLastDlIp, Date fileLastDlTime) {
		this.fileName = fileName;
		this.filePath = filePath;
		this.fileSize = fileSize;
		this.fileDate = fileDate;
		this.fileHash = fileHash;
		this.fileRemoteUri = fileRemoteUri;
		this.fileDisplayName = fileDisplayName;
		this.fileTags = fileTags;
		this.fileLicense = fileLicense;
		this.fileUserRoles = fileUserRoles;
		this.fileOffline = fileOffline;
		this.fileDirectLinking = fileDirectLinking;
		this.fileForceDownload = fileForceDownload;
		this.fileCategory = fileCategory;
		this.fileCategoryName = fileCategoryName;
		this.fileAttachOrder = fileAttachOrder;
		this.fileWpattachId = fileWpattachId;
		this.fileHits = fileHits;
		this.fileRatings = fileRatings;
		this.fileRatingSum = fileRatingSum;
		this.fileLastDlIp = fileLastDlIp;
		this.fileLastDlTime = fileLastDlTime;
	}

	public PebldsWpfbFiles(String fileName, String filePath, long fileSize,
			Date fileDate, String fileHash, String fileRemoteUri,
			String fileThumbnail, String fileDisplayName,
			String fileDescription, String fileTags, String fileRequirement,
			String fileVersion, String fileAuthor, String fileLanguage,
			String filePlatform, String fileLicense, String fileUserRoles,
			String fileOffline, String fileDirectLinking,
			String fileForceDownload, int fileCategory,
			String fileCategoryName, Long fileUpdateOf, Long filePostId,
			int fileAttachOrder, long fileWpattachId, Long fileAddedBy,
			long fileHits, long fileRatings, long fileRatingSum,
			String fileLastDlIp, Date fileLastDlTime) {
		this.fileName = fileName;
		this.filePath = filePath;
		this.fileSize = fileSize;
		this.fileDate = fileDate;
		this.fileHash = fileHash;
		this.fileRemoteUri = fileRemoteUri;
		this.fileThumbnail = fileThumbnail;
		this.fileDisplayName = fileDisplayName;
		this.fileDescription = fileDescription;
		this.fileTags = fileTags;
		this.fileRequirement = fileRequirement;
		this.fileVersion = fileVersion;
		this.fileAuthor = fileAuthor;
		this.fileLanguage = fileLanguage;
		this.filePlatform = filePlatform;
		this.fileLicense = fileLicense;
		this.fileUserRoles = fileUserRoles;
		this.fileOffline = fileOffline;
		this.fileDirectLinking = fileDirectLinking;
		this.fileForceDownload = fileForceDownload;
		this.fileCategory = fileCategory;
		this.fileCategoryName = fileCategoryName;
		this.fileUpdateOf = fileUpdateOf;
		this.filePostId = filePostId;
		this.fileAttachOrder = fileAttachOrder;
		this.fileWpattachId = fileWpattachId;
		this.fileAddedBy = fileAddedBy;
		this.fileHits = fileHits;
		this.fileRatings = fileRatings;
		this.fileRatingSum = fileRatingSum;
		this.fileLastDlIp = fileLastDlIp;
		this.fileLastDlTime = fileLastDlTime;
	}

	public Integer getFileId() {
		return this.fileId;
	}

	public void setFileId(Integer fileId) {
		this.fileId = fileId;
	}

	public String getFileName() {
		return this.fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	public String getFilePath() {
		return this.filePath;
	}

	public void setFilePath(String filePath) {
		this.filePath = filePath;
	}

	public long getFileSize() {
		return this.fileSize;
	}

	public void setFileSize(long fileSize) {
		this.fileSize = fileSize;
	}

	public Date getFileDate() {
		return this.fileDate;
	}

	public void setFileDate(Date fileDate) {
		this.fileDate = fileDate;
	}

	public String getFileHash() {
		return this.fileHash;
	}

	public void setFileHash(String fileHash) {
		this.fileHash = fileHash;
	}

	public String getFileRemoteUri() {
		return this.fileRemoteUri;
	}

	public void setFileRemoteUri(String fileRemoteUri) {
		this.fileRemoteUri = fileRemoteUri;
	}

	public String getFileThumbnail() {
		return this.fileThumbnail;
	}

	public void setFileThumbnail(String fileThumbnail) {
		this.fileThumbnail = fileThumbnail;
	}

	public String getFileDisplayName() {
		return this.fileDisplayName;
	}

	public void setFileDisplayName(String fileDisplayName) {
		this.fileDisplayName = fileDisplayName;
	}

	public String getFileDescription() {
		return this.fileDescription;
	}

	public void setFileDescription(String fileDescription) {
		this.fileDescription = fileDescription;
	}

	public String getFileTags() {
		return this.fileTags;
	}

	public void setFileTags(String fileTags) {
		this.fileTags = fileTags;
	}

	public String getFileRequirement() {
		return this.fileRequirement;
	}

	public void setFileRequirement(String fileRequirement) {
		this.fileRequirement = fileRequirement;
	}

	public String getFileVersion() {
		return this.fileVersion;
	}

	public void setFileVersion(String fileVersion) {
		this.fileVersion = fileVersion;
	}

	public String getFileAuthor() {
		return this.fileAuthor;
	}

	public void setFileAuthor(String fileAuthor) {
		this.fileAuthor = fileAuthor;
	}

	public String getFileLanguage() {
		return this.fileLanguage;
	}

	public void setFileLanguage(String fileLanguage) {
		this.fileLanguage = fileLanguage;
	}

	public String getFilePlatform() {
		return this.filePlatform;
	}

	public void setFilePlatform(String filePlatform) {
		this.filePlatform = filePlatform;
	}

	public String getFileLicense() {
		return this.fileLicense;
	}

	public void setFileLicense(String fileLicense) {
		this.fileLicense = fileLicense;
	}

	public String getFileUserRoles() {
		return this.fileUserRoles;
	}

	public void setFileUserRoles(String fileUserRoles) {
		this.fileUserRoles = fileUserRoles;
	}

	public String getFileOffline() {
		return this.fileOffline;
	}

	public void setFileOffline(String fileOffline) {
		this.fileOffline = fileOffline;
	}

	public String getFileDirectLinking() {
		return this.fileDirectLinking;
	}

	public void setFileDirectLinking(String fileDirectLinking) {
		this.fileDirectLinking = fileDirectLinking;
	}

	public String getFileForceDownload() {
		return this.fileForceDownload;
	}

	public void setFileForceDownload(String fileForceDownload) {
		this.fileForceDownload = fileForceDownload;
	}

	public int getFileCategory() {
		return this.fileCategory;
	}

	public void setFileCategory(int fileCategory) {
		this.fileCategory = fileCategory;
	}

	public String getFileCategoryName() {
		return this.fileCategoryName;
	}

	public void setFileCategoryName(String fileCategoryName) {
		this.fileCategoryName = fileCategoryName;
	}

	public Long getFileUpdateOf() {
		return this.fileUpdateOf;
	}

	public void setFileUpdateOf(Long fileUpdateOf) {
		this.fileUpdateOf = fileUpdateOf;
	}

	public Long getFilePostId() {
		return this.filePostId;
	}

	public void setFilePostId(Long filePostId) {
		this.filePostId = filePostId;
	}

	public int getFileAttachOrder() {
		return this.fileAttachOrder;
	}

	public void setFileAttachOrder(int fileAttachOrder) {
		this.fileAttachOrder = fileAttachOrder;
	}

	public long getFileWpattachId() {
		return this.fileWpattachId;
	}

	public void setFileWpattachId(long fileWpattachId) {
		this.fileWpattachId = fileWpattachId;
	}

	public Long getFileAddedBy() {
		return this.fileAddedBy;
	}

	public void setFileAddedBy(Long fileAddedBy) {
		this.fileAddedBy = fileAddedBy;
	}

	public long getFileHits() {
		return this.fileHits;
	}

	public void setFileHits(long fileHits) {
		this.fileHits = fileHits;
	}

	public long getFileRatings() {
		return this.fileRatings;
	}

	public void setFileRatings(long fileRatings) {
		this.fileRatings = fileRatings;
	}

	public long getFileRatingSum() {
		return this.fileRatingSum;
	}

	public void setFileRatingSum(long fileRatingSum) {
		this.fileRatingSum = fileRatingSum;
	}

	public String getFileLastDlIp() {
		return this.fileLastDlIp;
	}

	public void setFileLastDlIp(String fileLastDlIp) {
		this.fileLastDlIp = fileLastDlIp;
	}

	public Date getFileLastDlTime() {
		return this.fileLastDlTime;
	}

	public void setFileLastDlTime(Date fileLastDlTime) {
		this.fileLastDlTime = fileLastDlTime;
	}
    public Set<PebldsBestPractice> getBestPracticeSet()
    {
        return bestPracticeSet;
    }

    public void setBestPracticeSet(Set<PebldsBestPractice> bestPracticeSet)
    {
        this.bestPracticeSet = bestPracticeSet;
    }

    public Set<PebldsProject> getPebldsProjects()
    {
        return pebldsProjects;
    }

    public void setPebldsProjects(Set<PebldsProject> pebldsProjects)
    {
        this.pebldsProjects = pebldsProjects;
    }

    public Set<PebldsTechnicalReport> getPebldsTechnicalReports()
    {
        return pebldsTechnicalReports;
    }

    public void setPebldsTechnicalReports(Set<PebldsTechnicalReport> pebldsTechnicalReports)
    {
        this.pebldsTechnicalReports = pebldsTechnicalReports;
    }

    public byte[] getFile(String filePath){
        byte[] content = new byte[0];
        try {
            File file = new File(Configuration.getInstance().getPathPebldsFiles() + filePath);
            FileInputStream fis = new FileInputStream(file);

            content = new byte[(int)file.length()];
            fis.read(content);

        } catch (Exception e) {
            e.printStackTrace();
        }
        return content;
    }

    public String getMimeType(){
        MimetypesFileTypeMap mimeTypesMap = new MimetypesFileTypeMap();

        return mimeTypesMap.getContentType(Configuration.getInstance().getPathPebldsFiles() + filePath);
    }

    @Override
    public OEntity asEntity(EdmEntitySet ees){
        final List<OProperty<?>> properties = new ArrayList<OProperty<?>>();
        properties.add(OProperties.int32("id", getFileId()));
        properties.add(OProperties.string("filename", getFileName()));
        properties.add(OProperties.string("language", getFileLanguage()));
        properties.add(OProperties.string("mimeType", getMimeType()));
        properties.add(OProperties.string("url", Configuration.getInstance().getURLPebldsFiles() + getFilePath()));
        properties.add(OProperties.binary("content", getFile(getFilePath())));
        return OEntities.create(ees, OEntityKey.create(getFileId()), properties, new ArrayList<OLink>(), null, null);
    }

}
